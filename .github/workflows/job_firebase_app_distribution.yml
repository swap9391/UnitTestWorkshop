name: Deploy To Firebase App Distribution

on:
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        required: true
        default: 'UnitTestWorkshop Debug build to distribute on Firebase app distribution'
        description: 'Release Notes'
      version_name:
        type: number
        required: true
        default: 1.0
        description: 'Version Name (e.g., 1.0)'


jobs:
    build:
      name: Building and distributing app on Debug variant
      runs-on: ubuntu-latest
      permissions:
        contents: write  # Grant write permission to the repository's contents

      steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'

        - name: Setup Gradle
          uses: gradle/gradle-build-action@v2

        - name: Make gradlew executable
          run: chmod +x ./gradlew

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
           node-version: 'lts/*'

        - name: Install Firebase CLI
          run: npm install -g firebase-tools

        - name: Install Firebase CLI
          run: curl -sL firebase.tools | bash

        - name: Authenticate Firebase CLI
          run: |
            echo "${{ secrets.FIREBASE_CI_TOKEN }}" > firebase_token.txt
            firebase login --token "$(cat firebase_token.txt)"
            rm firebase_token.txt

        - name: Fetch Remote Config
          id: fetch_config
          run: |
                  config=$(firebase remoteconfig:get --json)
                  echo "REMOTE_CONFIG_JSON=$config" >> $GITHUB_ENV

        - name: Access Specific Values (Example)
          run: |
           version_code=$(echo "$REMOTE_CONFIG_JSON" | jq -r '.parameters.version_code.defaultValue.value')
           version_name=$(echo "$REMOTE_CONFIG_JSON" | jq -r '.parameters.version_name.defaultValue.value')
           echo "Fetched versionCode: $version_code"
           echo "Fetched versionName: $version_name"
           echo "VERSION_CODE=$version_code" >> $GITHUB_ENV
           echo "VERSION_NAME=$version_name" >> $GITHUB_ENV   

        - name: Get current versionCode
          id: get_version_code
          run: |
              VERSION_CODE=$(cat version.txt)
              echo "Current versionCode from file: $VERSION_CODE"
              echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV  

        - name: Increment versionCode and update file
          id: increment_version_code
          run: |
              VERSION_CODE=$(cat version.txt)
              INCREMENTED_VERSION_CODE=$(( $VERSION_CODE + 1 ))
              echo "INCREMENTED_VERSION_CODE=$INCREMENTED_VERSION_CODE" >> $GITHUB_ENV
              echo "The incremented versionCode is=$INCREMENTED_VERSION_CODE"
              echo "$INCREMENTED_VERSION_CODE" > version.txt
              cat version.txt

        - name: Configure Git
          run: |
              git config --local user.name "GitHub Actions Bot"
              git config --local user.email "actions@github.com"

        - name: Check Git Remote
          run: git remote -v

        - name: Check Branch Tracking
          run: git branch -vv

        - name: Check Git Status
          run: git status

        - name: Commit and push versionCode update
          uses: stefanzweifel/git-auto-commit-action@v5
          with:
           commit_message: "Increment versionCode to ${{ env.INCREMENTED_VERSION_CODE }}"
           file_pattern: version.txt
           #github_token: ${{ secrets.GH_TOKEN }} # Use the secret you created

        - name: Execute Gradle command - clean and assembleDebug with Version Info
          run: ./gradlew clean assembleDebug -PversionCode=${{ env.INCREMENTED_VERSION_CODE }} -PversionName="${{ inputs.version_name }}"

        - name: upload artifact to Firebase App Distribution
          uses: wzieba/Firebase-Distribution-Github-Action@v1
          with:
            appId: ${{secrets.FIREBASE_APP_ID}}
            serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
            groups: my-tester
            file: app/build/outputs/apk/debug/app-debug.apk
            releaseNotes: ${{inputs.release_notes}}
